% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustering.R
\name{assign_visit_to_cluster}
\alias{assign_visit_to_cluster}
\title{Assign Visit to the Cluster}
\usage{
assign_visit_to_cluster(visit_description, clusters, inter_term_vectors,
  exam_term_vectors)
}
\arguments{
\item{visit_description}{A named two element vector (with names: \code{inter} and \code{exam})
of concatenated terms of interview and examination, separated by ", "}

\item{clusters}{An output of the function \link{cluster_visits}}

\item{inter_term_vectors}{A matrix of embeddings of the interview terms}

\item{exam_term_vectors}{A matrix of embeddings of the examination terms}
}
\value{
A list of:
   \item{\code{cl}}{The number of the closest cluster}
   \item{\code{distances}}{The vector of distances to each cluster}
}
\description{
Assign a given visit to the closest cluster from a given clustering.
The function generates the embedding of the visit (by the function \link{embed_visit})
and computed the squared Euclidean distance from the clusters' centers.
}
\examples{
inter_term_vectors <- embed_terms(interviews, embedding_size = 10L,
                                  term_count_min = 1L)
exam_term_vectors <- embed_terms(examinations, embedding_size = 10L,
                                 term_count_min = 1L)
visits_vectors <- embed_list_visits(interviews,
                                    examinations, inter_term_vectors, exam_term_vectors)
clusters <- cluster_visits(visits_vectors, visits,
                           spec = "internist",
                           cluster_number = 2L)
assign_visit_to_cluster(c(inter = "cough, fever, rhinitis", exam = ""),
                       clusters, inter_term_vectors, exam_term_vectors)
assign_visit_to_cluster(c(inter = "thyroid", exam = ""),
                       clusters, inter_term_vectors, exam_term_vectors)
assign_visit_to_cluster(c(inter = "cough, fever, rhinitis",
                         exam = "patient, heart"),
                       clusters, inter_term_vectors, exam_term_vectors)

}
